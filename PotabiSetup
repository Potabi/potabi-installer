#!/usr/bin/env python
import sys
import os
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWebKit import *
from PyQt5.QtWebKitWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *
from PyQt5.QtWidgets import QApplication, QWidget, QMainWindow

app = QApplication(sys.argv)
index = os.path.abspath(os.path.join(os.path.dirname(__file__), "interface/index.html"))

class SystemModifier(QObject):
    def __init__(self, parent=None):
        super(SystemModifier, self).__init__(parent)

    @pyqtSlot(str)
    def exec(self, message):
        os.system(message)

system = SystemModifier()

class SystemRead(QObject):
    def __init__(self, parent=None):
        super(SystemRead, self).__init__(parent)

    @pyqtSlot(result=str)
    def fileLanguages(self):
        data = list()
        with open("conf/languages.txt") as read_file:
            for i in read_file.readlines():
                if i.endswith("\n"):
                    i = i.replace("\n", "")
                data.append(i)
        languageNames = str()
        for i in data:
            languageNames += i + " "
        return languageNames

    @pyqtSlot(result=str)
    def fileKeyboards(self):
        data = list()
        with open("conf/keyboards.txt") as read_file:
            for i in read_file.readlines():
                if i.endswith("\n"):
                    i = i.replace("\n", "")
                data.append(i)
        keyboardNames = str()
        for i in data:
            keyboardNames += i + " "
        return keyboardNames

    @pyqtSlot(result=str)
    def fileDisks(self):
        data = list()
        with open("conf/disks.txt") as read_file:
            for i in read_file.readlines():
                if i.endswith("\n"):
                    i = i.replace("\n", ",")
                data.append(i)
        diskNames = str()
        for i in data:
            diskNames += i + "|"
        return diskNames

reader = SystemRead()

class SystemWriter(QObject):
    def __init__(self, parent=None):
        super(SystemWriter, self).__init__(parent)
        
    @pyqtSlot(str)
    def config(self, config_item):
        with open("conf/config.conf", "a") as write_file:
            write_file.write(config_item + "\n")
            write_file.close()

writer = SystemWriter()

class Window(QWebView):
    def __init__(self):
        super().__init__()
        frame = self.page().mainFrame()

        self.setWindowTitle("Potabi Setup")
        self.load(QtCore.QUrl.fromLocalFile(index))

        frame.addToJavaScriptWindowObject('system', system)
        frame.addToJavaScriptWindowObject('reader', reader)
        frame.addToJavaScriptWindowObject('writer', writer)

        self.show()

open("conf/config.conf", "w").write("")
window = Window()
sys.exit(app.exec_())
